#!/bin/bash

wd=$PWD
#fpath_logo_dir=$wd/places/scalable
#fpath_logo_dir_dest=$wd/apps/scalable

alternative_match() {
local patterns="ID=arch:ID=raspbian" IFS=:
  for i in ${patterns}; do
    if $(grep -wsq "$i" /etc/os-release); then
	      echo "${i##*=}" && break
    fi
  done
  unset i patterns
}

lsb_format() {
  sed 's/\s+//g;s/[^a-z]//g'<<<${1,,}
}

SVG_ACCEPTED_DISTRO=(raspbian linuxmint debian ubuntu fedora manjaro arch elementaryos gentoo opensuse korora mageia)
SVG_ACCEPTED_DESKTOP=(gnome unity kde xfce lxde)
SVG_FILENAME=""

check_distro() {
   for distro in ${SVG_ACCEPTED_DISTRO[@]}; do
     if [ "$distro" == "$1" ]; then
       #if distro match but svg file name is different
       case $distro in
        raspbian) SVG_FILENAME=debian && break;;
        arch) SVG_FILENAME=archlinux && break;;
        *) SVG_FILENAME=$1 && break;;
       esac
     fi
   done
   unset distro
}

check_desktop() {
   for desktop in ${SVG_ACCEPTED_DESKTOP[@]}; do
     if [ "$desktop" == "$1" ]; then
       SVG_FILENAME=$1
     fi
  done
  unset desktop
}

detect_distro() {
   check_distro "$(lsb_format "$(lsb_release -si 2>/dev/null)")"
   DISTRO=${SVG_FILENAME}
   [ -z ${DISTRO} ] && echo "Could not determine distribution trying with another method" && check_distro "$(alternative_match)"
   DISTRO=${SVG_FILENAME:-undetect}
}

detect_desktop() {
   check_desktop "$(lsb_format "$XDG_CURRENT_DESKTOP")"
   DESKTOP=${SVG_FILENAME:-undetect}
}





cd $wd/places/scalable

detect_distro
case $DISTRO in
   undetect) echo "Could not determine distribution logo." && ln -sf distributor-logo-gnome.svg distributor-logo.svg ;;
   *) echo "distribution: $DISTRO detect" && ln -sf distributor-logo-$DISTRO.svg distributor-logo.svg ;;
esac

detect_desktop
echo "Use distributor logo from desktop environment? [y/N]"
#read 1 char on newline
read -sn1 yn
if [ "${yn}" == "y" ] || [ "${yn}" == "Y" ]; then
   case $DESKTOP in
      undetect) echo "Could not determine desktop environment... Using distribution logo" ;;
      *) echo "desktop: $DESKTOP detect" && ln -sf distributor-logo-$DESKTOP.svg distributor-logo.svg ;;
   esac
fi

ln -sf distributor-logo.svg start-here.svg # fixes potentially broken link

ln -sfr "$wd"/places/scalable/distributor-logo.svg "$wd"/apps/scalable/cs-desktop.svg
ln -sfr "$wd"/places/scalable/distributor-logo.svg "$wd"/apps/scalable/applications-system.svg
echo "Updated distributor logo."


cd "$wd"/mimetypes/scalable
case $DISTRO in
   opensuse|fedora) ln -sf application-x-rpm-$DISTRO.svg application-x-rpm.svg ;;
   debian|ubuntu) ln -sf application-x-deb-$DISTRO.svg application-x-deb.svg ;;
   linuxmint)
      ln -sf application-x-deb-$DISTRO.svg application-x-deb.svg
	   ln -sf application-x-desktop-$DISTRO.svg application-x-desktop.svg
      ;;
   *)
      ln -sf application-x-deb-debian.svg application-x-deb.svg
	   ln -sf application-x-rpm-redhat.svg application-x-rpm.svg
      ;;
esac
echo "Updated package archive icons."

if [ "$DESKTOP" != "undetect" ]; then
   ln -sf application-x-desktop-$DESKTOP.svg application-x-desktop.svg
   echo "Updated mimetype icons."
fi
